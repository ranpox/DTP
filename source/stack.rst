.. _header-n0:

整体架构
========

要了解DTP的架构，我们首先需要了解任务型对话系统的基本组成部分。

.. figure:: https://dtp.oss-cn-beijing.aliyuncs.com/imgs/stack-1.png
   :alt: 

如图1所示，当用户说出一条语音指令后，对话系统首先会通过\ **语音识别模块**\ （ASR）将其转换成文本，之后便会进入\ **自然语言理解模块**\ （NLU），这部分的主要工作是将用户表达中所包含的“意图”和“语义槽”提取出来，之后便进入\ **对话管理模块**\ （DM），这部分包含了两个子模块，\ **对话状态追踪模块**\ （DST）和\ **策略优化模块**\ （DPO），前者负责将本轮的语义信息与历史的对话状态进行整合；后者则负责根据机器人当前的对话状态从多个系统动作中选择一个最优的。得到需要执行的动作后，对话系统会再通过\ **自然语言生成模块**\ （NLG）和\ **语音合成模块**\ （TTS）生成最后的结果返回给用户。

最终，通过DTP搭建的对话系统的整体架构如图2所示。

.. figure:: https://dtp.oss-cn-beijing.aliyuncs.com/imgs/stack-2.png
   :alt: 

首先，最上层是开发者应用，这部分包含了开发者自己的应用程序，DTP所提供的对话机器人服务将会以API的形式接入开发者应用。在开发者应用层之下，便是我们的DTP，DTP主要包含两个部分，一部分是\ **语义理解**\ ，另外一部分是\ **对话管理**\ 。以“帮我订一张去北京的机票”为例，语义理解将要对用户说的这句话进行分析并理解，通过这个模块，系统可以判断出，用户的意图是“订机票”，语义槽“到达地”的值是“北京”。但只理解单轮的对话还不够，系统还要与用户进行交互，在这个例子里，由于用户只说了“到达地”，没有说“出发地”，因此，机器人就会反问“请问您从哪里出发呢？”，这部分的工作便由对话管理模块来负责。而整个架构最底层则是：\ **语言技术平台**
，\ **LTP**\ 和\ **大词林**\ ，通过借助实验室多年积累的自然语言处理技术：包括词法分析、语义计算、知识挖掘等等，机器理解的能力得到了大大提升。
